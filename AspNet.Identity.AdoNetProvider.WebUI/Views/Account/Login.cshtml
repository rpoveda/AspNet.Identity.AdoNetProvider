@using Microsoft.Owin.Security
@model AspNet.Identity.AdoNetProvider.WebUI.Models.LoginModel

@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_BasicLayout.cshtml";
}

<div class="row">
    <div class="col-md-6 col-md-offset-3">
        <h2>Login</h2>
        @if (!string.IsNullOrEmpty(ViewBag.Message))
        {
            <div class="alert alert-danger alert-dismissible fade in" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <p>
                    @ViewBag.Message
                </p>
            </div>
        }
        @using (Html.BeginForm("Login", "Account", FormMethod.Post, new { @class = "form-horizontal" }))
        {
            @Html.ValidationSummary(false)
            @Html.AntiForgeryToken()
            <input type="hidden" name="returnUrl" value="@ViewBag.ReturnUrl" />
            <div class="form-group">
                @Html.LabelFor(e => e.UserName, "Email")
                @Html.TextBoxFor(e => e.UserName, new { @class = "form-control", placeholder = "Email", type = "email" })
            </div>
            <div class="form-group">
                @Html.LabelFor(e => e.Password, "Password")
                @Html.PasswordFor(e => e.Password, new { @class = "form-control", placeholder = "Password" })
            </div>
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(e => e.RememberMe) Remember me
                    </label>
                </div>
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Sign in</button>
                <span>or </span>
                @Html.ActionLink("register", "Register", "Account")
                <span> if you do not have an account</span>
            </div>
        }
    </div>
    <div id="external-providers" class="col-md-6 col-md-offset-3">
        @{
            var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();

            using (Html.BeginForm("ExternalLogin", "Account", FormMethod.Post, new { returnUrl = ViewBag.ReturnUrl }))
            {
                @Html.AntiForgeryToken()
                foreach (var description in loginProviders)
                {
                    <button type="submit" class="btn btn-default" id="@description.AuthenticationType" name="provider" value="@description.AuthenticationType"
                            title="Log in using your @description.Caption account">
                        @description.AuthenticationType
                    </button>
                }
            }
        }
    </div>
</div>

@section scripts {
    <script src="~/Scripts/jquery.unobtrusive-ajax.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.validate.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js" type="text/javascript"></script>
}